#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$(dirname "$0")/config"

service_link() {
  local APP="$1"
  local SERVICE_URL=$(service_url)
  local EXISTING_CONFIG=$(dokku config "$APP")
  local LINK=$(echo "$EXISTING_CONFIG" | grep "$SERVICE_URL" | cut -d: -f1) || true
  local LINKS_FILE="$LINKS_FILE"

  [[ -n $LINK ]] && dokku_log_fail "Already linked as $LINK"
  mkdir -p "$SERVICE_ROOT" || dokku_log_fail "Unable to create service directory"
  touch "$LINKS_FILE"
  echo "$APP" >> "$LINKS_FILE"
  sort "$LINKS_FILE" -u -o "$LINKS_FILE"

  dokku docker-options:add "$APP" build,deploy,run "--link $JENKINS_CONTAINER_NAME:$JENKINS_HOST_NAME"
  dokku config:set "$APP" "JENKINS_URL=$SERVICE_URL"
}

service_unlink() {
  local APP="$1"
  local SERVICE_URL=$(service_url)
  local EXISTING_CONFIG=$(dokku config "$APP")
  local LINK=($(echo "$EXISTING_CONFIG" | grep "$SERVICE_URL" | cut -d: -f1)) || true

  [[ -z ${LINK[*]} ]] && dokku_log_fail "Not linked to app $APP"
  remove_from_links_file "$APP"

  dokku docker-options:remove "$APP" build,deploy,run "--link $JENKINS_CONTAINER_NAME:$JENKINS_HOST_NAME"
  dokku config:unset "$APP" "${LINK[*]}"
}

service_url() {
  local PASSWORD="$(cat "$PASSWORD_FILE")"
  echo "http://admin:$PASSWORD@$JENKINS_HOST_NAME:${JENKINS_PORT}"
}

remove_from_links_file() {
  local APP="$1"

  mkdir -p "$SERVICE_ROOT" || dokku_log_fail "Unable to create service directory"
  touch "$LINKS_FILE"
  sed -i "/^$APP\$/d" "$LINKS_FILE"
  sort "$LINKS_FILE" -u -o "$LINKS_FILE"
}

service_start() {
  local ID=$(docker ps -f status=running | grep "$JENKINS_CONTAINER_NAME" | awk '{print $1}') || true
  [[ -n $ID ]] && dokku_log_warn "Jenkins is already started" && return 0

  # Add all JENKINS_* environment variables to $JENKINS_ENV_FILE
  # This is simpler than always adding the new ones to the docker run
  # command line.
  : ${JENKINS_ENV_FILE:=$(mktemp)}
  set | grep -a "^JENKINS_" >> ${JENKINS_ENV_FILE}

  dokku_log_info1_quiet "Starting container"
  local PREVIOUS_ID=$(docker ps -f status=exited | grep "$JENKINS_CONTAINER_NAME" | awk '{print $1}') || true
  if [[ -n $PREVIOUS_ID ]]; then
    docker start "$PREVIOUS_ID" > /dev/null
  else
    PASSWORD=$(cat "$PASSWORD_FILE")
    docker run -d -p 8080:8080 -p 50000:50000            \
	   --name ${JENKINS_CONTAINER_NAME}              \
	   --hostname ${JENKINS_HOST_NAME}               \
	   --env-file="${JENKINS_ENV_FILE}"              \
	   "${JENKINS_IMAGE}" >/dev/null
    echo "Jenkins has started"
  fi
}

service_stop() {
  local ID=$(docker ps -f status=running | grep "$JENKINS_CONTAINER_NAME" | awk '{print $1}') || true
  [[ -z $ID ]] && dokku_log_warn "Jenkins is already stopped" && return 0

  if [[ -n $ID ]]; then
    docker stop "$JENKINS_CONTAINER_NAME" > /dev/null
  fi
}
