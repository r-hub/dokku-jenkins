#!/bin/bash
set -e;

PLUGIN_BASE_PATH="$PLUGIN_PATH"
if [[ -n $DOKKU_API_VERSION ]]; then
  PLUGIN_BASE_PATH="$PLUGIN_ENABLED_PATH"
fi

PLUGIN_ROOT="$(dirname ${0})"

source "$PLUGIN_BASE_PATH/common/functions"
source "$PLUGIN_ROOT/functions"
source "$PLUGIN_ROOT/config"

f_is_running() {
   local l_id

   l_id=$(docker ps | grep "$JENKINS_IMAGE" |  awk '{print $1}')

   printf "${l_id}"
   return 0
}

create_password_file() {
    if [[ ! -e "${PASSWORD_FILE}" ]]; then
	password=$(openssl rand -hex 8)
	echo "$password" > $PASSWORD_FILE
	chmod 640 $PASSWORD_FILE
    fi
}

# Check if name is specified
if [[ $1 == jenkins:* ]]; then
    :
fi

case "$1" in

  jenkins:start)
    ID="$(f_is_running)"
    if [ -z "${ID}" ] ; then
      create_password_file
      PASSWORD=$(cat "$PASSWORD_FILE")
      docker run -d -p 8080:8080 -p 50000:50000            \
	     --name ${JENKINS_CONTAINER_NAME}              \
	     --hostname ${JENKINS_HOST_NAME}               \
	     --env-file="${JENKINS_ENV_FILE}"              \
	     -e JENKINS_ADMIN_USER="${JENKINS_ADMIN_USER}" \
	     -e JENKINS_ADMIN_PASSWORD="${PASSWORD}"       \
	     "${JENKINS_IMAGE}" >/dev/null
      echo "Jenkins has started"
     "${PLUGIN_ROOT}/commands" jenkins:info
    else
      echo "Jenkins is already up and running."
    fi
    ;;

  jenkins:stop)
    ID="$(f_is_running)"
    if [ -n "${ID}" ] ; then
      docker stop "${ID}" >/dev/null
      echo "Jenkins has stopped."
    else
      echo "Jenkins is not running."
    fi
    ;;

  jenkins | jenkins:info)
    ID="$(f_is_running)"
    if [ -n "${ID}" ]; then
      IP=$(docker inspect $ID | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
      PORT=$(docker port $ID 8080 | cut -d":" -f2)
      BACKDOOR=$(docker port $ID 50000 | cut -d":" -f2)
      echo
      echo "       Host: $IP"
      echo "       Public port: $PORT"
      echo "       Public port for attached slave agents: $BACKDOOR"
      echo
    else
      echo "Jenkins is not running."
    fi
    ;;

  jenkins:logs)
    ID="$(f_is_running)"
    if [ -n "${ID}" ] ; then
      docker logs -f -t "${ID}" # | tail -n 100
    else
      echo "Jenkins is not running."
    fi
    ;;

  jenkins:link)
    [[ -z $2 ]] && dokku_log_fail "Please specify an app to run the command on"
    verify_app_name "$2"
    service_link "$2"
    ;;

  jenkins:unlink)
    [[ -z $2 ]] && dokku_log_fail "Please specify an app to run the command on"
    verify_app_name "$2"
    service_unlink "$2"
    ;;

  help)
    cat<<EOF
    jenkins, Display container information
    jenkins:start, Start Jenkins
    jenkins:stop, Stop Jenkins
    jenkins:logs, Display last logs from Jenkins container
    jenkins:link <app>, Links an app to Jenkins
    jenkins:unlink <app>, Unlink an app from Jenkins
EOF
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac
